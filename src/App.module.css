.App {
  text-align: center;
  min-height: 100vh;
}

.header {
  max-width: 52rem;
  padding-top: 0.3rem;
  padding-bottom: 0.3rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  margin-left: auto;
  margin-right: auto;
  height: 70px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  color: #fff;
}

.headerNav ul {
  display: flex;
  align-items: center;
}

.headerNav li {
  list-style: none;
  margin-left: 1.5em;
}

.headerNav li:first-of-type {
  margin-left: 0px;
}

.headerNav a {
  color: white;
  font-family: 'Consolas', 'Monaco', monospace;
  font-weight: bold;
  font-style: normal;
  text-decoration: none;
  font-size: 1.5em;
  transition: color 0.1s ease-in;
  display: flex;
  align-items: center;
}

.headerNav a:hover {
  color: #A497AF;
}

.blinkName {
  color: white;
  font-family: 'Consolas', 'Monaco', monospace;
  font-weight: bold;
  font-style: normal;
  font-size: 2em;
  text-decoration: none;
  text-align: left;
  /*
    Using grid to place both variants in same place
    Using height so that text fills all available
    vertical space in flex and then placing it back
    in the middle with align-items. This way hover
    zone is much larger and effect is prettier
  */
  display: grid;
  height: 100%;
  align-items: center;
}

/* 
  This plus display: grid in .blinkName make both
  spans occupy same place
*/
.blinkName .atName, .blinkName .normalName {
  grid-row: 1;
  grid-column: 1;
}

.blinkName .atName {
  opacity: 100%;
  transition: opacity 0.3s ease-in;
}

.blinkName .normalName {
  opacity: 0%;
  transition: opacity 0.3s ease-in;

  white-space: pre;
}

.blinkName:hover .atName {
  opacity: 0%;
}

.blinkName:hover .normalName {
  opacity: 100%;
}

.headerWrapper {
  width: 100vw;
  position: fixed;
  top: 0;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: 50vw;
  background: #960018;
  z-index: 100;
}

.link {
  color: #b318f0;
}

.content {
  margin-top: 80px;
  position: relative;
}